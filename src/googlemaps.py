# -*- coding: utf-8 -*-
"""googlemaps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CFgzXw3IVktGr7TSIYQnjDDdujeG_vqm
"""

!pip install googlemaps
import googlemaps
GOOGLE_MAPS_API_KEY = 'AIzaSyB5xFv9a9IdFjw4DWTRl4gkqHar-uBVqBA'
g = googlemaps.Client(key=GOOGLE_MAPS_API_KEY)
class Schedule:
  def __init__(self, origLat,origLont,destLat,destLont,startTime,endTime,timeCons,timeSpare):
    self.origLat = origLat
    self.origLont = origLont
    self.destLat = destLat
    self.destLont = destLont
    self.startTime = startTime
    self.endTime = endTime
    self.timeCons = timeCons
    self.timeSpare = timeSpare

d = Schedule(41.50542,-81.60914,41.437125,-81.63289,0,60,20,20)
r1 = Schedule(41.457125, -81.64129,41.487155,-81.55115,20,60,50,0)
r2 = Schedule(41.427125, -81.75129,41.547155,-81.66115,20,60,50,0)

pointList = [d,r1,r2]
origList = []
destList = []

for p in pointList:
  origList.append((p.origLat,p.origLont))

  
for p in pointList:
  destList.append((p.destLat,p.destLont))

lst = origList + destList

result = g.distance_matrix(origins = lst, destinations = lst, mode="driving")

varList = [] # stores the route and use to reference in future
durationList = []
for i,row in enumerate(result['rows']):
 for j,detail in enumerate(row['elements']):
    varList.append(str(i) + str(j))
    durationList.append(detail['duration']['value'])

class Route:
  def __init__(self, var, duration):
    self.var = duration
    self.var = duration

import itertools

routeItr = list(itertools.permutations(varList[1:-1]))

routeItr[0]



